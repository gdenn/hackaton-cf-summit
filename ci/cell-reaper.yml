resource_types:
- name: slack-read-resource
  type: docker-image
  source:
    repository: jakobleben/slack-read-resource

resources:
- name: ci_scripts
  type: git
  source:
    uri: git@github.com:gdenn/hackaton-cf-summit.git
    branch: master
    private_key: ((cell_reaper.git_private_key))
- name: cf_deployment_config
  type: git
  source:
    uri: git@github.com:gdenn/hackaton-cf-summit.git
    branch: master
    paths: 
    - config/config.yml
    private_key: ((cell_reaper.git_private_key))
- name: scale_up_message
  type: slack-read-resource
  source:
    token: ((cell_reaper.scale_up_message.token))
    channel_id: ((cell_reaper.scale_up_message.channel_id))
    # matching:
    #   text_pattern: '<@UA91GVCMS>\s+(.+)'

jobs:
  - name: up_scale
    serial: true
    plan:
    - get: ci_scripts
    - get: scale_up_message
      trigger: true
    - task: up_scale
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: avarteqgmbh/pipeline-utils
        inputs:
          - name: ci_scripts
        outputs:
          - name: config_output
        run: 
          path: ruby
          args:
          - ci_scripts/ci/up_scale.rb
        params:
          UP_SCALE_STEP_SIZE: ((cell_reaper.up_scale_step_size))
    - put: cf_deployment_config
      params:
        repository: config_output

  - name: deploy
    serial: true
    plan:
    - get: cf_deployment_config
      trigger: true
      passed: [up_scale]
    - get: ci_scripts
    - task: deploy_cf
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: avarteqgmbh/pipeline-utils
        inputs:
          - name: ci_scripts
        run: 
          path: bash
          args:
          - ci_scripts/ci/deploy.sh
        params:
          BOSH_CLIENT: ((cell_reaper.boch_client))
          BOSH_CLIENT_SECRET: ((cell_reaper.bosh_client_secret))
          BOSH_CA_CERT: ((cell_reaper.bosh_ca_cert))
          BOSH_ENVIRONMENT: ((cell_reaper.bosh_environment))
